image: gradle:8.5.0-jdk21-alpine

stages:
  - compile
  - checkstyle
  - test
  - coverageReport
  - triage

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  key: "$CI_COMMIT_REF_NAME"
  policy: pull-push
  paths:
    - build
    - client/build
    - commons/build
    - server/build
    - .gradle

compile:
  stage: compile
  script:
    - ./gradlew --build-cache assemble

checkstyle:
  stage: checkstyle
  needs: [ ]
  script:
    - ./gradlew --build-cache $CHECKSTYLE
  parallel:
    matrix:
      - CHECKSTYLE: [ 'checkstyleMain', 'checkstyleTest' ]

commons:test:
  stage: test
  needs:
    - compile
  script:
    - ./gradlew --build-cache :commons:test --tests commons.$TEST_CLASS
  parallel:
    matrix:
      - TEST_CLASS:
          - "ColourTest"
          - "CurrencyTest"
          - "EventTest"
          - "ExpenseTest"
          - "PaymentTest"
          - "PersonTest"
          - "TagTest"

client:test:
  stage: test
  needs:
    - compile
  before_script:
    - apk update
    - apk add xvfb-run
    - apk add gtk+3.0
    - ./gradlew --build-cache bootrun --args='--seed' &   # Start the server as a background process
    - sleep 30  # Adjust the sleep time based on how long it takes for the server to start
  script:
    - xvfb-run ./gradlew --build-cache :client:test

server:database:test:
  stage: test
  needs:
    - compile
  script:
    - ./gradlew --build-cache :server:test --tests server.database.$TEST_CLASS
  parallel:
    matrix:
      - TEST_CLASS:
          - "ColourRepositoryTest"
          - "CurrencyRepositoryTest"
          - "EventRepositoryTest"
          - "ExpenseRepositoryTest"
          - "PaymentRepositoryTest"
          - "PersonRepositoryTest"
          - "TagRepositoryTest"

server:service:test:
  stage: test
  needs:
    - compile
  script:
    - ./gradlew --build-cache :server:test --tests server.service.$TEST_CLASS
  parallel:
    matrix:
      - TEST_CLASS:
          - "PersonServiceTest"
          - "PaymentServiceTest"
          - "ExpenseServiceTest"
          - "EventServiceTest"

server:controller:test:
  stage: test
  needs:
    - compile
  script:
    - ./gradlew --build-cache :server:test --tests server.api.$TEST_CLASS
  parallel:
    matrix:
      - TEST_CLASS:
          - "PersonControllerTest"
          - "PaymentControllerTest"
          - "ExpenseControllerTest"
          - "EventControllerTest"

coverageReport:
  stage: coverageReport
  needs:
    - commons:test
    - client:test
    - server:database:test
    - server:service:test
    - server:controller:test
  script:
    - ./gradlew --build-cache compileTestJava
    - ./gradlew --build-cache AggregateJacocoReport
    - mv build/reports/jacoco/aggregate/html ./coverage
    - mv build/reports/jacoco/aggregate/jacocoTestReport.xml ./coverage/report.xml
    - echo `cat coverage/index.html | grep -o -E "Total[^%]+?%" | sed -E "s/<.*>//" | sed -E "s/Total/TestCoverage:/"`
  artifacts:
    paths:
      - ./coverage
  coverage: /TestCoverage:(\d+)%/

dry-run:triage:
  image: ruby:3.0
  stage: triage
  script:
    - gem install gitlab-triage
    - gitlab-triage --help
    - gitlab-triage --dry-run --token j4Sr_UUUmsJ96xkkbs4y --host-url $CI_SERVER_URL --source projects --source-id $CI_PROJECT_PATH --debug
  when: manual
  except:
    - schedules

run:triage:
  image: ruby:3.0
  stage: triage
  script:
    - gem install gitlab-triage
    - gitlab-triage --token j4Sr_UUUmsJ96xkkbs4y --host-url $CI_SERVER_URL --source projects --source-id $CI_PROJECT_PATH
